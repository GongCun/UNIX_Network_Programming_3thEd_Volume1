head	1.4;
access;
symbols;
locks
	gongcunjust:1.1
	gongcunjust:1.4; strict;
comment	@ * @;


1.4
date	2015.04.21.04.50.50;	author gongcunjust;	state Exp;
branches;
next	1.3;

1.3
date	2015.04.21.04.42.28;	author gongcunjust;	state Exp;
branches;
next	1.2;

1.2
date	2015.04.21.04.36.06;	author gongcunjust;	state Exp;
branches;
next	1.1;

1.1
date	2015.04.18.00.55.48;	author gongcunjust;	state Exp;
branches;
next	;


desc
@initial version, the cliaddr and addrlen is NULL
@


1.4
log
@get temp port using getsockname.
@
text
@#include	"unp.h"
#include	<time.h>

int
main(int argc, char **argv)
{
	int					listenfd, connfd;
	struct sockaddr_in	servaddr, cliaddr;
    socklen_t len;
	char				buff[MAXLINE];
	time_t				ticks;

	listenfd = Socket(AF_INET, SOCK_STREAM, 0);

	bzero(&servaddr, sizeof(servaddr));
	servaddr.sin_family      = AF_INET;
	servaddr.sin_addr.s_addr = htonl(INADDR_ANY);
	servaddr.sin_port        = htons(9999);	/* daytime server */

	/* Bind(listenfd, (SA *) &servaddr, sizeof(servaddr)); */

	Listen(listenfd, LISTENQ);

    len = sizeof(servaddr);
    Getsockname(listenfd, (SA *) &servaddr, &len); /* get the temp port */
    printf("local address is %s\n",
            sock_ntop((SA *) &servaddr, len));

	for ( ; ; ) {
        len = sizeof(cliaddr);
		connfd = Accept(listenfd, (SA *) &cliaddr, &len);
        printf("connection from %s, port %d\n",
                inet_ntop(AF_INET, &cliaddr.sin_addr, buff, sizeof buff),
                ntohs(cliaddr.sin_port));

        ticks = time(NULL);
        snprintf(buff, sizeof(buff), "%.24s\r\n", ctime(&ticks));
        Write(connfd, buff, strlen(buff));

		Close(connfd);
	}
}
@


1.3
log
@uncomment the 'listen' and comment the 'bind' to test.
@
text
@d24 5
@


1.2
log
@comment the listen to test.
@
text
@d20 1
a20 1
	Bind(listenfd, (SA *) &servaddr, sizeof(servaddr));
d22 1
a22 1
	/* Listen(listenfd, LISTENQ); */
@


1.1
log
@Initial revision
@
text
@d8 2
a9 1
	struct sockaddr_in	servaddr;
d18 1
a18 1
	servaddr.sin_port        = htons(13);	/* daytime server */
d22 1
a22 1
	Listen(listenfd, LISTENQ);
d25 5
a29 1
		connfd = Accept(listenfd, (SA *) NULL, NULL);
@
